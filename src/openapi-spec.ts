/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export type paths = {
  "/auth/login": {
    post: {
      requestBody: {
        content: {
          "application/json": {
            usernameOrEmail: string;
            password: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** @description User ID */
              id: string;
              email: string | null;
              username: string;
            };
          };
        };
      };
    };
  };
  "/auth/signup": {
    post: {
      requestBody: {
        content: {
          "application/json": {
            /** Format: email */
            email?: string;
            username: string;
            password: string;
            firstName: string;
            lastName: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** @description User ID */
              id: string;
              email: string | null;
              username: string;
            };
          };
        };
      };
    };
  };
  "/auth/logout": {
    delete: {
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/api/members": {
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": ({
                /** @description Member ID */
                id: string;
                firstName: string;
                lastName: string;
                avatarUrl: string | null;
                classYear: string | null;
                role: "COLLABORATOR" | "MEMBER" | "ADMIN";
                orientation: "RESEARCH" | "ENGINEERING" | "OPERATION_ASSISTANT" | "HUMAN_RESOURCE";
                qualification: "PASSED" | "WARNING" | "FAILED" | "BYPASS" | "NO_DATA";
                major: string | null;
                joinedAt: number;
                expertises: string[];
                remarks: string | null;
              })[];
          };
        };
      };
    };
    post: {
      requestBody: {
        content: {
          "application/json": {
            firstName: string;
            lastName: string;
            role?: "COLLABORATOR" | "MEMBER" | "ADMIN";
            orientation: "RESEARCH" | "ENGINEERING" | "OPERATION_ASSISTANT" | "HUMAN_RESOURCE";
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** @description Member ID */
              id: string;
            };
          };
        };
      };
    };
  };
  "/api/members/{memberId}/details": {
    /** Member details */
    get: {
      parameters: {
        path: {
          memberId: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              id: string;
              firstName: string;
              lastName: string;
              avatarUrl: string | null;
              status: "ACTIVE" | "INACTIVE";
              role: "COLLABORATOR" | "MEMBER" | "ADMIN";
              orientation: "RESEARCH" | "ENGINEERING" | "OPERATION_ASSISTANT" | "HUMAN_RESOURCE";
              githubUsername: string | null;
              email: string | null;
              phone: string | null;
              major: string | null;
              classYear: string | null;
              joinedAt: number;
              leaveAt: number | null;
              applyingStandards: ("WORKING_TIME" | "PROJECT" | "GPA")[];
              studyResults: ({
                  semester: string;
                  gpa: number | null;
                })[];
              expertises: string[];
            };
          };
        };
      };
    };
  };
  "/api/members/{memberId}/standards": {
    /** Member standards */
    get: {
      parameters: {
        query: {
          type: "WORKING_TIME" | "PROJECT" | "GPA";
        };
        path: {
          memberId: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": ({
              /** @enum {string} */
              type: "WORKING_TIME";
              summary: {
                currentWeek: number;
                averagePerWeek: number;
              };
              qualification: "PASSED" | "WARNING" | "FAILED" | "BYPASS" | "NO_DATA";
              message?: string;
            }) | ({
              /** @enum {string} */
              type: "PROJECT";
              projects: {
                PROPOSING: number;
                IN_PROGRESS: number;
                COMPLETED: number;
                CANCELLED: number;
              };
              qualification: "PASSED" | "WARNING" | "FAILED" | "BYPASS" | "NO_DATA";
              message?: string;
            }) | ({
              /** @enum {string} */
              type: "GPA";
              data: {
                  semester: string;
                  gpa: number;
                  qualified: boolean;
                }[];
              qualification: "PASSED" | "WARNING" | "FAILED" | "BYPASS" | "NO_DATA";
              message?: string;
            });
          };
        };
      };
    };
  };
  "/api/members/{memberId}/worklogs": {
    /** Member worklogs */
    get: {
      parameters: {
        query: {
          from: number;
          to: number;
        };
        path: {
          memberId: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
                /** @description Unix timestamp */
                time: number;
                /** @description Duration in seconds */
                duration: number;
              }[];
          };
        };
      };
    };
  };
  "/api/accounts": {
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": ({
                id: string;
                username: string;
                email: string | null;
              })[];
          };
        };
      };
    };
  };
  "/api/user": {
    /** @deprecated */
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              id: string;
              username: string;
              email: string | null;
              avatarUrl: string | null;
              phone: string | null;
              birthdate: number | null;
              orientation: ("RESEARCH" | "ENGINEERING" | "OPERATION_ASSISTANT" | "HUMAN_RESOURCE") | null;
              urls: string[];
            };
          };
        };
      };
    };
  };
  "/api/user/password": {
    put: {
      requestBody: {
        content: {
          "application/json": {
            oldPassword: string;
            newPassword: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": true;
          };
        };
      };
    };
  };
  "/api/projects": {
    /** Get all projects */
    get: {
      parameters: {
        query?: {
          page?: number;
          perPage?: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              metadata: {
                totalPages: number;
                totalItems: number;
              };
              data: ({
                  /** @description Project ID */
                  id: string;
                  name: string;
                  productType: string[];
                  description: string | null;
                  status: "PROPOSING" | "IN_PROGRESS" | "COMPLETED" | "CANCELLED";
                  members: ({
                      /** @description Member ID */
                      id: string;
                      displayName: string;
                      avatarUrl: string | null;
                    })[];
                  startDate: number;
                  endDate: number | null;
                })[];
            };
          };
        };
      };
    };
    /** Create a new project */
    post: {
      requestBody: {
        content: {
          "application/json": {
            name: string;
            status: "PROPOSING" | "IN_PROGRESS" | "COMPLETED" | "CANCELLED";
            memberId: string;
          };
        };
      };
      responses: {
        /** @description Project ID */
        200: {
          content: {
            "application/json": string;
          };
        };
      };
    };
  };
  "/api/projects/{projectId}": {
    get: {
      parameters: {
        path: {
          /** @description Project ID */
          projectId: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              status: "PROPOSING" | "IN_PROGRESS" | "COMPLETED" | "CANCELLED";
              name: string;
              startDate: number;
              endDate: number | null;
              productType: string[];
              description: string | null;
            };
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          /** @description Project ID */
          projectId: string;
        };
      };
      responses: {
        /** @description Project ID */
        200: {
          content: {
            "application/json": string;
          };
        };
      };
    };
    /**
     * Change status of a project
     * @deprecated
     */
    patch: {
      parameters: {
        path: {
          /** @description Project ID */
          projectId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            status: "PROPOSING" | "IN_PROGRESS" | "COMPLETED" | "CANCELLED";
          };
        };
      };
      responses: {
        /** @description Project ID */
        200: {
          content: {
            "application/json": string;
          };
        };
      };
    };
  };
  "/api/projects/{projectId}/status": {
    /** Change status of a project */
    patch: {
      parameters: {
        path: {
          /** @description Project ID */
          projectId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            status: "PROPOSING" | "IN_PROGRESS" | "COMPLETED" | "CANCELLED";
          };
        };
      };
      responses: {
        /** @description Project ID */
        200: {
          content: {
            "application/json": string;
          };
        };
      };
    };
  };
  "/api/projects/{projectId}/members": {
    /** Get members of a project */
    get: {
      parameters: {
        path: {
          /** @description Project ID */
          projectId: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": ({
                /** @description Member Id */
                memberId: string;
                avatarUrl: string | null;
                name: string;
                role: "OWNER" | "LEADER" | "MEMBER" | "MENTOR" | "CONSULTANT";
                status: "QUITTED" | "ACTIVE" | "INACTIVE";
                timeAveragePerMonth: number | null;
                timeInMonthByFourWeeks: number[] | null;
                joinedAt: number | null;
                leavedAt: number | null;
              })[];
          };
        };
      };
    };
  };
  "/api/projects/{projectId}/members/{memberId}": {
    /** Update inf of a member in project */
    put: {
      parameters: {
        path: {
          /** @description Project ID */
          projectId: string;
          /** @description Member ID */
          memberId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            role?: "OWNER" | "LEADER" | "MEMBER" | "MENTOR" | "CONSULTANT";
            description?: string;
            status: "QUITTED" | "ACTIVE" | "INACTIVE";
          };
        };
      };
      responses: {
        /** @description Member ID */
        200: {
          content: {
            "application/json": string;
          };
        };
      };
    };
    /** [Project-details](members): Add a member to project */
    post: {
      parameters: {
        path: {
          /** @description Project ID */
          projectId: string;
          /** @description Member ID */
          memberId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            name: string;
            status: "PROPOSING" | "IN_PROGRESS" | "COMPLETED" | "CANCELLED";
            memberId: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** @description Member ID */
              id: string;
            };
          };
        };
      };
    };
    /** Remove member from a project */
    delete: {
      parameters: {
        path: {
          /** @description Project ID */
          projectId: string;
          /** @description Member ID */
          memberId: string;
        };
      };
      responses: {
        /** @description Member ID */
        200: {
          content: {
            "application/json": string;
          };
        };
      };
    };
  };
};

export type webhooks = Record<string, never>;

export type components = {
  schemas: {
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
};

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
